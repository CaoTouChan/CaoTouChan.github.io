---
layout: post
title: 结构化学习（1）：介绍、统一框架
date: 2019-05-25 19:50:01.000000000 +09:00
---
## 引入

在一般的机器学习中，我们都是在把输入 X 投射到一个向量 y。但是有的情况下，我们需要一个更加强大的函数，来满足输入输出都是结构化的数据。考虑一下场景：

*  语音识别 Speech recognition
> X: Speech signal (sequence) → Y: text (sequence)

* 翻译 Translation
>X: Mandarin sentence (sequence) → Y: English sentence
(sequence)

* 语法解析 Syntactic Paring
>X: sentence → Y: parsing tree (tree structure)

* 目标检测 Object Detection
> X: Image → Y: bounding box

* 概要抽取 Summarization
> X: long document → Y: summary (short paragraph)

* 检索 Retrieval
> X: keyword → Y: search result (a list of webpage)

所以，我们会需要一个函数，满足输入和输出都是结构化的对象（sequence, list, tree, bounding box 等）：

$$f : X \rightarrow Y
$$

其中 $X$ 和 $Y$ 都是某种结构化对象空间。

## 统一框架 (Unified Framework)

### 框架描述
* Training

找到一个函数：

$$F: X * Y \rightarrow  R
$$

> F(x,y): 评估对象 x 和 y 的相容性 （how compatible）

* Inference (Testing)

对于对象 x：

$$\hat{y} = arg \space max_{y \in Y} F(x, y)
$$

### 框架应用举例

以目标检测为例。我们使用 bounding box 来标识出一系列对象的位置，比如下图，做一个无心小和尚的 detector ：

$$X : Image \rightarrow Y : Bounding Box
$$

![](https://github.com/CaoTouChan/ctc_imgs/raw/master/006tNc79gy1g4goughh89j31hs0u07dj.jpg)

以上，图片就是我们的输入 $x$，而$y$ 就是我们的 bounding box。那么 $F(x, y)$ 就是将$x$中$y$的范围作为 “无心小和尚” 的正确性。所以，红框（无心）对应的 $F_红(x, y)$ 会高于蓝框（蓝框）对应的 $F_蓝(x, y)$。

在 Inference 阶段，我们穷举所有的 bounding box，看看哪一个是得分最高哪个就是我们的目标输出。

## 统计统一框架 (Statistics unified framework)

考虑下边的基于概率（统计）框架：

* Traning

评估概率 $P(x, y)$ ：

$$P : X * Y \rightarrow [0, 1]
$$

* Inference

对于给定的 $x$:

$$\begin{aligned}
\hat{y} 
& = arg \space max_{y \in Y} P(y | x) \\
& = arg \space max_{y \in Y} \frac{P(x, y)}{P(x)} \\
& = arg \space max_{y \in Y} P(x, y)
\end{aligned}
$$

实际上，在 Graphical Model 中，经常使用的是 Statistics unified framework 这种表达方式。(两种方式的本质是一样的)

这种方式的缺点是：

1. 概率不能表示一切
2. 0-1 的约束并非必要

优点在于：

1. 可解释性好
2. [Energy-based Model](http://www.cs.nyu.edu/~yann/research/ebm/)

## 需要解决的三个问题

统一框架下，我们需要解决三个问题：

1.  `F(x, y)` 怎么定义

![](https://github.com/CaoTouChan/ctc_imgs/raw/master/006tNc79gy1g4govwlsbxj313a0iaabw.jpg)

2. `arg max` 问题如何解决

$$\hat{y} = arg \space max_{y \in Y} F(x, y)
$$

我们需要遍历空间 Y 的所有可能，这个空间可能很大，比如：

* 目标检测 : Y = 所有可能得 bounding box
* 概要抽取: Y= 所有可能得句子
* 检索: Y = 所有可能得网页排序

3. 对于给定的训练数据，如何找到 `F(x, y)`

对于给定的训练数据：

$${(x^1, \hat{y}^1), ..., (x^r, \hat{y}^r), ...}$$

我们要找到 `F(x, y)` 使得：

![](https://github.com/CaoTouChan/ctc_imgs/raw/master/006tNc79gy1g4gox49bugj30yy0cg3yt.jpg)

参考链接：
1. [台灣大學 李宏毅 《Structured Learning: Introduction》](https://www.youtube.com/watch?v=HfPw40JPays&list=PLJV_el3uVTsNHQKxv49vpq7NSn-zim18V&index=2) （需要梯子）







